// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/service.proto

package org.wso2.vick.telemetry.receiver.generated;

public final class Service {
  private Service() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\026mixer/v1/service.proto\022\016istio.mixer.v1" +
      "\032\024mixer/v1/check.proto\032\025mixer/v1/report." +
      "proto2\232\001\n\005Mixer\022F\n\005Check\022\034.istio.mixer.v" +
      "1.CheckRequest\032\035.istio.mixer.v1.CheckRes" +
      "ponse\"\000\022I\n\006Report\022\035.istio.mixer.v1.Repor" +
      "tRequest\032\036.istio.mixer.v1.ReportResponse" +
      "\"\000BA\n%org.wso2.vick.telemetry.receiver.c" +
      "oreZ\025istio.io/api/mixer/v1\200\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Check.getDescriptor(),
          Report.getDescriptor(),
        }, assigner);
    Check.getDescriptor();
    Report.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
